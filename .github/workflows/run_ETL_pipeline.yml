# Github actions workflow pipeline that pulls data from leetcode, 
# checks for new solved problems, if new problems are solved, creates
# LinkedIn post, and sends that post. 

name: Run ETL pipeline

on:
  # Pipeline runs when pushed.
  # push:

  # Pipeline can be run through github UI in the actions tab.
  workflow_dispatch:


  # I turned off the schedule, because this is just an example repo, I have a private
  # repo which is continously running, so no need for duplicate work. 
  
  #schedule:
    # - cron: '0 */2 * * *' # Pipeline is ran every 2 hours..

# Setting up env variables for actions pipeline.
env:
  LEET_CODE_CSRF_AUTH_TOKEN: ${{ secrets.LEET_CODE_CSRF_AUTH_TOKEN }}
  LEET_CODE_SESSION_AUTH_TOKEN: ${{ secrets.LEET_CODE_SESSION_AUTH_TOKEN }}
  LINKED_IN_OATH_2_TOKEN: ${{ secrets.LINKED_IN_OATH_2_TOKEN }}
  LINKED_IN_USER_URN: ${{ secrets.LINKED_IN_USER_URN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository content to github runner
      - name: checkout repo content
        uses: actions/checkout@v2 

      # Install the python version needed
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      # Run pip. 
      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Execute ETL pipeline.
      - name: Execute ETL pipeline
        run: python run_pipeline.py
      
      # Create "actions-user" which commits code each time pipeline is run.
      - name: commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git diff-index --quiet HEAD || (git commit -a -m "updated logs" --allow-empty)

      - name: push changes if on main branch.
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
